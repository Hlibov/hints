В index.php пишем  

<?php
  wp_header();
?>

<?php
  wp_footer();
?>

Для подключения стилей и скриптов в WP необходима в корне папке проекта создать файл
function.php

Внутри него пишем
	<?php
		add_action('wp_enqueue_scripts', 'childhood_scripts');

		function childhood_scripts() {
  			wp_enqueue_style('chidhood-style', get_stylesheet_uri());
			wp_enqueue_style('header-style', get_tamplate_directiory_uri() . '/assents/styles/main.css');
			wp_enqueue_style('animate-style', 'https: //cdnjs.cloudflare.com/ajax/libs/animate.css/3.7.2./animate.min.css');
		}

	?>

где:

	add_action  --- Прикрепляет указанную PHP функцию на указанный хук. Указанная функция сработает в момент события, которое в свою очередь запускается с помощью do_action().

Хук на который цепляется функция создается (инициализируется) с помощью функции do_action().
	
	wp_enqueue_scripts --- Использовать эту функцию для подключения js файлов важно, потому что так вы в дальнейшем сможете без лишних проблем объединять JS файлы в один. Также в некоторых случаях избавитесь от конфликтов скриптов, когда зависимый скрипт подключается до основного (того от которого он зависит).

Функция добавляет скрипт, только если он еще не был добавлен и другие скрипты от которых он зависит, зарегистрированы. Зависимые скрипты добавляются автоматически.

ВАЖНО! Это ошибка начинающих разработчиков. Функция ничего не выведет, если в теме не используется wp_head() или wp_footer(). Именно в момент вызова этих функций срабатывает хук, который добавляет скрипты.

	get_stylesheet_uri()  --- получим URL файла стилей текущей темы // выведет: http://wp-kama.ru/wp-content/themes/wp-kama/style.css

	get_tamplate_directiory_uri() --- получим путь до шаблона // получим: http://example.com/wp-content/themes/theme_name
	
	wp_enqueue_style()  ---  Если файл не был предварительно зарегистрирован, то эта функция зарегистрирует файл и добавит его в очередь.   
	
